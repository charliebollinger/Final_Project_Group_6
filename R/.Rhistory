coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
arrange(desc(word, n)) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
arrange(desc(word, n)) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
arrange(desc(word, n)) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
mutate(word = reorder(word, n)) %>%
arrange(desc(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
mutate(word = reorder(word, n)) %>%
arrange(desc(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment) +
coord_flip()
, scales = "free_y"
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
mutate(word = reorder(word, n)) %>%
arrange(desc(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
mutate(word = reorder(word, n)) %>%
arrange(desc(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_grid(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
mutate(word = reorder(word, n)) %>%
arrange(desc(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
mutate(word = reorder(word, n)) %>%
arrange(desc(word, n)) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count
word_count %>%
filter(word!="miss") %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count
word_count %>%
filter(word!="miss") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count
word_count %>% group_by(book)
word_count %>%
filter(word!="miss") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE)
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE)
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
, with_ties = FALSE
word_count %>%
group_by(sentiment, book) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE)
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, -n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
slice_max(order_by=n, n=10) %>%
ggplot(aes(x= reorder(word, -n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE)
sentiment_plot
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip()
#The difference between word counts became much narrower when we removed excessively used words that did not make sense in terms of the context.
new_tibble %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = line %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->sentiments
sentiments %>% head(10)
sentiments %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->sentiment_plot
sentiment_plot
sentiments %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")+
labs(title="Custom Bing")->sentiment_plot
sentiment_plot
sentiments %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")+
ggtitle("Custom Bing")->sentiment_plot
sentiment_plot
sentiments %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("Custom Bing")+
facet_wrap(~book, ncol = 2, scales = "free_x")->sentiment_plot
sentiment_plot
sentiments %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
theme("Custom Bing")+
facet_wrap(~book, ncol = 2, scales = "free_x")->sentiment_plot
sentiment_plot
sentiments %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
theme(plot.title = element_text(color="red", size=14, face="bold.italic"))+
facet_wrap(~book, ncol = 2, scales = "free_x")->sentiment_plot
sentiment_plot
sentiments %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("Custom Bing")+
theme(plot.title = element_text(color="red", size=14, face="bold.italic"))+
facet_wrap(~book, ncol = 2, scales = "free_x")->sentiment_plot
sentiments %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("Custom Bing")+
theme(plot.title = element_text(color="red", size=14, face="bold.italic"))+
facet_wrap(~book, ncol = 2, scales = "free_x")->sentiment_plot
sentiment_plot
sentiments %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("Custom Bing")+
theme(plot.title = element_text(color="blue", size=14, face="bold.italic", hjust=0.5))+
facet_wrap(~book, ncol = 2, scales = "free_x")->sentiment_plot
sentiment_plot
install.packages("gridExtra")
library(gridExtra)
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip() -> count_plot
grid.arrange(sentiment_plot, count_plot, ncol=1)
gutenberg_works() %>%
filter(author=="Twain, Mark")
gutenberg_works() %>%
filter(author=="Twain, Mark" & title==c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))
gutenberg_works() %>%
filter(author=="Twain, Mark" & title %in% c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))
gutenberg_works() %>%
filter(author=="Twain, Mark")
gutenberg_works() %>%
filter(author=="Twain, Mark") %>% filter(title %in% c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))
gutenberg_works() %>%
filter(author=="Twain, Mark") #%>% filter(title %in% c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))
gutenberg_works() %>%
filter(author=="Twain, Mark") %>% filter(title %like% c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))
gutenberg_works() %>%
filter(author=="Twain, Mark") %>% filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad")))
gutenberg_works() %>%
filter(author=="Twain, Mark") #%>% filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad")))
gutenberg_works() %>%
filter(author=="Twain, Mark") %>% filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad")))
gutenberg_works() %>%
filter(str_detect(title,"Prince and the Pauper"))
gutenberg_works() %>%
filter(str_detect(title,"Huckleberry Finn"))
gutenberg_works() %>%
filter(str_detect(title,"Tom Sawyer"))
gutenberg_works() %>%
filter(str_detect(title,"Connecticut Yankee in King Arthur's Court"))
gutenberg_works() %>%
filter(str_detect(title,"Life on the Mississippi"))
gutenberg_works() %>%
filter(str_detect(title,"Prince and the Pauper"))#1837
gutenberg_works() %>%
filter(str_detect(title,"A Tramp Abroad"))
gutenberg_download(c(76, 74, 86, 245, 1837, 119), meta_fields = title())
gutenberg_download(c(76, 74, 86, 245, 1837, 119), meta_fields ="title" )
gutenberg_download(c(76, 74, 86, 245, 1837, 119), meta_fields ="title" ) ->twain
twain
twain %>% filter(gutenberg_id==76)
twain %>% filter(gutenberg_id=86)
twain %>% filter(gutenberg_id==86)
twain %>%
group_by(gutenberg_id) %>%
unnest_tokens(word, text)
twain
twain %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(book, word, sort = TRUE)
twain
twain %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(title, word, sort = TRUE)
twain %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(title, word, sort = TRUE) %>%
group_by(title) %>%
summarize(total = sum(n), .groups = "keep")
twain %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(title, word, sort = TRUE) -> book_words
book_words %>%
group_by(title) %>%
summarize(total = sum(n), .groups = "keep") ->
total_words
book_words %>%
left_join(total_words, by = "book") ->
book_words
book_words %>%
left_join(total_words, by = "title") -> book_words
book_words
tfidf_prep <- function(book){
book %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(title, word, sort = TRUE) -> book_words
book_words %>%
group_by(title) %>%
summarize(total = sum(n), .groups = "keep") -> total_words
book_words %>%
left_join(total_words, by = "title") -> book_words
return(book_words)
}
tfidf_prep(twain)
tfidf_prep(twain) ->twain_books
twain_books %>% head()
twain_books %>% head(10)
twain_books %>% head()
twain_books %>%
bind_tf_idf(word, title, n)
twain_books %>%
bind_tf_idf(word, title, n) %>%
arrange(tf_idf, word)
twain_books %>%
bind_tf_idf(word, title, n) %>%
arrange(tf_idf, word) %>% head(10)
twain_books %>%
bind_tf_idf(word, title, n) %>%
arrange(tf_idf, word) ->twain_books
twain_books
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_histogram()
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_histogram(xlim=0.001)
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_histogram(xlim=0.001)
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_histogram(xlim=0.07)
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_histogram(xlim=0.07) +facet_wrap(~title)
ggplot(aes(x=tf)) + geom_histogram(xlim=0.07) +facet_wrap(~title)
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_histogram(xlim=0.07) +facet_wrap(~title)
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_histogram(xlim=0.01) +facet_wrap(~title)
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_freqpoly() +facet_wrap(~title)
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_freqpoly() +facet_wrap(~title)
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_freqpoly(xlim = c(0, 0.01)) +facet_wrap(~title)
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_histogram(xlim = c(0, 0.01)) +facet_wrap(~title)
ggplot(aes(x=tf)) + geom_histogram(xlim = c(0, 0.01)) +facet_wrap(~title)
twain_books %>%
group_by(title) %>%
ggplot(aes(x=tf)) + geom_histogram(xlim = c(0, 0.01)) +facet_wrap(~title)
twain_books %>% ggplot(aes(x=tf)) +geom_histogram()
twain_books %>% ggplot(aes(x=tf)) +geom_histogram()
twain_books %>%
ggplot(aes(tf, fill = book)) +
geom_histogram(show.legend = FALSE) +
xlim(NA, 0.0009) +
facet_wrap(~book, ncol = 2, scales = "free_y")
twain_books %>%
ggplot(aes(tf, fill = title)) +
geom_histogram(show.legend = FALSE) +
xlim(NA, 0.0009) +
facet_wrap(~title, ncol = 2, scales = "free_y")
twain_books
twain_books %>% arrange(desc(tf_idf)) %>% head(15)
twain_books %>%
arrange(desc(tf_idf)) %>%
mutate(word = parse_factor(word, levels = rev(unique(word)))) %>%
group_by(title) %>%
slice_max(order_by = tf_idf, n=7) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~title, ncol = 2, scales = "free") +
coord_flip()
grid.arrange(sentiment_plot, (count_plot+coord_flip()), ncol=1)
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") ->count_plot
grid.arrange(sentiment_plot, count_plot, ncol=1)
install.packages("cowplot")
library(cowplot)
plot_grid(sentiment_plot, count_plot, align = "v", nrow = 2, rel_heights = c(1/4, 3/4))
word_count %>%
filter(word!="miss" & word !="slowly") %>%
group_by(book, sentiment) %>%
slice_max(order_by=n, n=10, with_ties = FALSE) %>%
ggplot(aes(x= reorder(word, n), n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(book~sentiment, scales = "free_y") +
coord_flip() -> count_plot
plot_grid(sentiment_plot, count_plot, align = "v", nrow = 2, rel_heights = c(1/4, 3/4))
library(gridExtra)
library(cowplot)
new_tibble %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = line %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->sentiments
sentiments %>% head(10)
sentiments %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("Custom Bing")+
theme(plot.title = element_text(color="blue", size=14, face="bold.italic", hjust=0.5))+
facet_wrap(~book, ncol = 2, scales = "free_x")->sentiment_plot
sentiment_plot
plot_grid(sentiment_plot, count_plot, align = "v", nrow = 2, rel_heights = c(1/4, 3/4))
#We cannot see the clear dominance of the negative sentiment in the plot below. It might be because the authors used negative words not only repetitively but also they used more negative words than positive words.
